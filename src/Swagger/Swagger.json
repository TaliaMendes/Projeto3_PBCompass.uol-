{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "FlexiLease Autos API",
    "description": "Documentation regarding the FlexiLease Autos API"
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "paths": {
    "/cars": {
      "get": {
        "summary": "List all cars",
        "tags": ["Cars"],
       "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "Model of the car",
            "required": false,
            "type": "string"
          },
          {
            "name": "color",
            "in": "query",
            "description": "Color of the car",
            "required": false,
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year of the car",
            "required": false,
            "type": "string"
          },
          {
            "name": "value_per_day",
            "in": "query",
            "description": "Value per day of renting the car",
            "required": false,
            "type": "number"
          },
          {
            "name": "number_of_passengers",
            "in": "query",
            "description": "Number of passengers the car can accommodate",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of cars",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Car"
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      },
      "post": {
        "summary": "Create a car",
        "tags": ["Cars"],
        "parameters": [
          {
            "name": "Car",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Car"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Car created",
            "schema": {
                "$ref": "#/definitions/Car"
            }
          },
          "400": {
          "description": "Bad request - Validation failed, missing required fields, or validation error"
          },
          "500": {
          "description": "Internal server error - An unexpected error occurred"
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "summary": "Get a car by ID",
        "tags": ["Cars"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Car details",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "404": {
            "description": "Car not found"
          },
          "500:": {
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      },
      "put": {
        "summary": "Update a car",
        "tags": ["Cars"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Car",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Car"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car updated",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "404": {
            "description": "Car not found"
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      },
      "delete": {
        "summary": "Delete a car",
        "tags": ["Cars"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Car deleted"
          },
          "404": {
            "description": "Car not found"
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      }
    },
    "/cars/{carId}/accessories/{accessoryId}": {
      "patch": {
        "summary": "Atualiza ou adiciona um acessório ao carro",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID do carro",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessoryId",
            "in": "path",
            "description": "ID do acessório",
            "required": false,
            "type": "string"
          },
          {
            "name": "Accessory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Accessory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Carro atualizado com sucesso",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "404": {
            "description": "Carro não encontrado ou acessório não encontrado"
          },
          "500":{
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List all users",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "username",
            "required": false,
            "type": "string"
          },
          {
            "name": "cpf",
            "in": "query",
            "description": "user cpf",
            "required": false,
            "type": "string"
          },
          {
            "name": "birth",
            "in": "query",
            "description": "user's date of birth",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "user email",
            "required": false,
            "type": "number"
          },
          {
            "name": "password",
            "in": "query",
            "description": "user password",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cep",
            "in": "query",
            "description": "user cep",
            "required": false,
            "type": "integer"
          },
          {
            "name": "qualified",
            "in": "query",
            "description": "qualified user to drive",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      },
      "post": {
        "summary": "Create a user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
          "description": "Bad request - Validation failed, missing required fields, or validation error"
          },
          "500" : {
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500":{
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "User",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500":{
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          },
          "500":{
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "summary": "Authenticate user",
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "Credentials",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User authenticated",
            "schema": {
              "type": "string",
              "example": "JWT token"
            }
          },
          "400": {
            "description": "Invalid credentials"
          },
          "500":{
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      }
    },
    "/reserves": {
      "get": {
        "summary": "List all reserves",
        "tags": ["Reserves"],
        "parameters": [
          {
            "name": "carId",
            "in": "query",
            "description": "ID car",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_user",
            "in": "query",
            "description": "ID user",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "car rental start date",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "car rental end date",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of reserves",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reserve"
              }
            }
          },
          "500":{
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      },
      "post": {
        "summary": "Create a reserve",
        "tags": ["Reserves"],
        "parameters": [
          {
            "name": "Reserve",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reserve"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Reserve created",
            "schema": {
              "$ref": "#/definitions/Reserve"
            }
          },
          "400":{
            "description": "Bad request - Validation failed, missing required fields, or validation error"
          },
          "500":{
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      }
    },
    "/reserves/{id}": {
      "get": {
        "summary": "Get a reserve by ID",
        "tags": ["Reserves"],
        "parameters": [
          {
            "name": "id_reserve",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Reserve details",
            "schema": {
              "$ref": "#/definitions/Reserve"
            }
          },
          "404": {
            "description": "Reserve not found"
          },
          "500":{
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      },
      "put": {
        "summary": "Update a reserve by ID",
        "tags": ["Reserves"],
        "parameters": [
          {
            "name": "id_reserve",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Reserve",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reserve"
            }
          }
        ],
        "responses":{
          "200": {
            "description": "edited reservation",
            "schema": {
              "$ref": "#/definitions/Reserve"
            }
          },
          "404": {
            "description": "Reserve not found"
          },
          "500":{
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      },
      "delete": {
        "summary": "Delete a reserve",
        "tags": ["Reserves"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Reserve deleted"
          },
          "404": {
            "description": "Reserve not found"
          },
          "500":{
            "description": "Internal server error - An unexpected error occurred"
          }
        }
      }
    }
  },
  "definitions": {
    "Car": {
      "type": "object",
      "required": ["model", "color", "year", "value_per_day", "accessories", "number_of_passengers"],
      "properties": {
        "model": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "year": {
          "type": "string"
        },
        "value_per_day": {
          "type": "number"
        },
        "accessories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Accessory"
          }
        },
        "number_of_passengers": {
          "type": "number"
        }
      }
    },
    "Accessory": {
      "type": "object",
      "required": ["description"],
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "required": ["name", "cpf", "birth", "email", "password", "cep", "qualified"],
      "properties": {
        "name": {
          "type": "string"
        },
        "cpf": {
          "type": "string"
        },
        "birth": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "cep": {
          "type": "string"
        },
        "patio": {
          "type": "string"
        },
        "qualified": {
          "type": "string"
        },
        "complement": {
          "type": "string"
        },
        "neighborhood": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "uf": {
          "type": "string"
        }
      }
    },
    "Credentials": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Reserve": {
      "type": "object",
      "required": ["start_date", "end_date", "id_car", "id_user"],
      "properties": {
        "start_date": {
          "type": "string",
          "pattern": "YYYY/MM/DD"
        },
        "end_date": {
          "type": "string",
          "pattern": "YYYY/MM/DD"
        },
        "id_car": {
          "type": "string"
        },
        "id_user": {
          "type": "string"
        },
        "final_value": {
          "type": "number"
        }
      }
    }
  }
}
